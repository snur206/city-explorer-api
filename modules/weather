'use strict';

const axios = require('axios');
let cache = require('./cache.js');
require('dotenv').config();


async function getWeather(req, res) {
  let { lat, lon } = req.query;

  const key = `weather-` + lat + lon;

  const url = `http://api.weatherbit.io/v2.0/forecast/daily/?key=${process.env.WEATHER_API_KEY}&lang=en&lat=${lat}&lon=${lon}&days=3`;

  if (cache[key] && (Date.now() - cache[key].timestamp < 50000)) { // is the timestamp on the cache data within 50 seconds from now.
    //console.log('Cache hit');
  } else {
    ////console.log('Cache miss');
    cache[key] = {};
    cache[key].timestamp = Date.now();
    cache[key].data = await axios.get(url).then(response => parseWeather(response.data));
    ////console.log('cache', cache);
  }
//   ////console.log(cache[key].data);
res.status(200).send(cache[key]);
}

function parseWeather(weatherData) {
  try {
    const weatherSummaries = weatherData.data.map(day => {
      //   //console.log(day);
      return new Weather(day);
    });
    //console.log(weatherSummaries);
    return Promise.resolve(weatherSummaries);
  } catch (e) {
    return Promise.reject(e);
  }
}

class Weather {
  constructor(day) {
    this.forecast = day.weather.description;
    this.time = day.datetime;
  }
}

module.exports = getWeather;
